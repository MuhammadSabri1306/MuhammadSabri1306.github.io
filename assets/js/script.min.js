(()=>{var e={931:e=>{e.exports={social:{email:"mailto:muhammadsabri1306@gmail.com",github:"https://github.com/MuhammadSabri1306",linkedin:"https://www.linkedin.com/in/sabri-muhammad-3355061a3/",instagram:"https://www.instagram.com/initial.sa/"},projects:[{name:"Color Theme Generator",urlView:"https://muhammadsabri1306.github.io/ColorThemeGenerator/",urlGithub:"https://github.com/MuhammadSabri1306/ColorThemeGenerator",tag:["#colorgenerator","#tailwindcss","#frontend"],vendor:["Vue.js","Tailwind CSS","Heroicons","Font Awesome"],img:"assets/img/projects-colorthemegenerator.jpeg",desc:"Color Theme Generator can build color palette with more shades which is customizable to apply in projects as CSS Color Custom Properties (--*) or tailwind.config.js if you are familiar with Tailwind CSS."},{name:"Questions Room",urlView:"https://questions-room.web.app/",urlGithub:"https://github.com/MuhammadSabri1306/QuestionsRoom",tag:["#chatbot","#frontend","#javascript","#css"],vendor:["Vue.js","Firebase","Bootstrap","Font Awesome"],img:"assets/img/projects-questionsroom.jpeg",desc:"When start an onine meeting/class, we need to use another app to manage the audience's questions, sort it by delivery time and number of audiences who raise that question. Questions Room was develope with that main features."},{name:"IdentifyMe",urlView:"https://identifymeapps.web.app/",urlGithub:"https://github.com/MuhammadSabri1306/IdentifyMe",tag:["#frontend","#javascript","#css"],vendor:["Firebase","Bootstrap","AOS","Font Awesome"],img:"assets/img/projects-identifyme.jpeg",desc:"IdentifyMe was originally an artificial intelligence project which designed to identify student's personalities for educational purposes, so this project requires a really big size of training set. For noted, this repository only used as a questionnaire to collect the training set and focus on the front end as a landing page."},{name:"Mogreen",urlView:"https://www.globalmogreen.com/",urlGithub:null,tag:["#company_profile","#frontend","#javascript","#css"],vendor:["Bootstrap","AOS","Font Awesome"],img:"assets/img/projects-mogreen.jpeg",desc:"This project is a company profile website. Mogreen itself is a vegetable supplier company from Indonesia. To reach the market, Mogreen need to describe their brand details using a website with an attractive visual design that consist to their messages."}]}}},t={};function a(n){var r=t[n];if(void 0!==r)return r.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,a),o.exports}a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=a(931);function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}var n=function(e){!e.classList.contains("navbar-scrolled")&&window.scrollY>50&&e.classList.add("navbar-scrolled"),e.classList.contains("navbar-scrolled")&&window.scrollY<=50&&e.classList.remove("navbar-scrolled")},r=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(null===e&&(e=document.documentElement.classList.contains("dark")),e)return document.documentElement.classList.add("dark"),void(localStorage.theme="dark");document.documentElement.classList.remove("dark"),localStorage.theme="light"},o=document.querySelector("#navbar");window.addEventListener("scroll",(function(){n(o)})),window.addEventListener("DOMContentLoaded",(function(){var a;a=e.social,document.querySelectorAll("[data-social]").forEach((function(e){var t=e.getAttribute("data-social");a.hasOwnProperty(t)&&e.setAttribute("href",a[t])})),function(e){var t,a,n=document.getElementById("projectsWrapper"),r=(t=e,a=document.getElementById("projectsCard"),t.map((function(e){var t=a.content.cloneNode(!0);return t.querySelectorAll("[data-template-href]").forEach((function(t){var a=t.getAttribute("data-template-href");e.hasOwnProperty(a)&&null!=e[a]&&t.setAttribute("href",e[a])})),t.querySelectorAll("[data-template-source='img']").forEach((function(t){var a=new Image;a.onload=function(){t.closest("[data-image-loaded]").setAttribute("data-image-loaded","true")},a.setAttribute("alt",e.name+" screenshot"),a.src=e.img,t.append(a)})),t.querySelectorAll("[data-template-text]").forEach((function(t){var a=t.getAttribute("data-template-text");e.hasOwnProperty(a)||t.classList.add("hidden"),t.innerText=e[a]})),t.querySelectorAll("[data-template-item]").forEach((function(t){var a=t.getAttribute("data-template-item"),n=t.children[0],r=[];e.hasOwnProperty(a)&&e[a].forEach((function(e){r.push(n.cloneNode(!0));var t=r.length-1;r[t].hasAttribute("data-template-item-content")?r[t].innerText=e:r[t].querySelector("[data-template-item-content]").innerText=e})),t.innerHTML="",r.forEach((function(e){return t.append(e)}))})),t.querySelectorAll("[data-template-item-title]").forEach((function(a){var n=a.getAttribute("data-template-item-title");n&&e.hasOwnProperty(n)&&e[n].length>0&&t.querySelector('[data-template-item-title="'.concat(n,'"]')).classList.remove("hidden")})),t})));r.forEach((function(e){return n.append(e)}))}(e.projects),n(o),document.querySelectorAll("img[data-lazy-img]").forEach((function(e){var a=new Image;e.getAttributeNames().filter((function(e){return"data-lazy-img"!=e})).forEach((function(t){var n=e.getAttribute(t);a.setAttribute(t,n)}));var n,r=function(e,a){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,a){if(e){if("string"==typeof e)return t(e,a);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(e,a):void 0}}(e))||a&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,s=!0,c=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return s=e.done,e},e:function(e){c=!0,i=e},f:function(){try{s||null==n.return||n.return()}finally{if(c)throw i}}}}(e.classList.values());try{for(r.s();!(n=r.n()).done;){var o=n.value;a.classList.add(o)}}catch(e){r.e(e)}finally{r.f()}a.src=e.getAttribute("data-lazy-img"),a.onload=function(){e.parentNode.replaceChild(a,e)}}))}));var i=document.getElementById("darkMode"),s="dark"===localStorage.theme||!("theme"in localStorage)&&window.matchMedia("(prefers-color-scheme: dark)").matches;if(r(s),i.checked=s,i.onchange=function(){r(this.checked)},window.outerWidth>=768){var c=document.getElementById("sideSocial"),l=[];document.querySelectorAll(".navbar a.nav-brand, .nav-menu a").forEach((function(e){var t=e.getAttribute("href");l.push({name:t.slice(1,t.length),elm:document.querySelector(t)})}));var u=l[0].elm.offsetHeight;u=window.outerWidth>=1024?u-10*u/100:u-20,window.addEventListener("scroll",(function(){!function(e,t){window.scrollY>=e&&!t.classList.contains("show")&&t.classList.add("show"),window.scrollY<e&&t.classList.contains("show")&&t.classList.remove("show")}(u,c),function(e){var t=function(e){for(var t=e.length-1;t>=0;t--)if(window.scrollY>e[t].elm.offsetTop-250)return e[t].name;return!1}(e),a=document.querySelector('.nav-menu a[href="#'.concat(t,'"]')),n=a?a.parentElement:null,r=document.querySelector(".nav-item.active");r&&r!=n&&r.classList.remove("active"),n&&!n.classList.contains("active")&&n.classList.add("active")}(l.slice(1))}))}else{var d=document.querySelector(".navbar .nav-brand"),m=document.querySelector("#navbar .nav-menu"),h=document.querySelectorAll(".nav-toggler, .nav-item"),f=document.getElementById("backdrop");d.addEventListener("click",(function(e){return m.classList.contains("show")&&e.preventDefault()}));var p=function(){m.classList.toggle("show"),f.classList.toggle("show")};f.addEventListener("click",(function(){return p()})),h.forEach((function(e){e.addEventListener("click",(function(){return p()}))}))}})()})();